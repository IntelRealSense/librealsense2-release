%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/noetic/.*$
%global __requires_exclude_from ^/opt/ros/noetic/.*$

Name:           ros-noetic-librealsense2
Version:        2.45.0
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS librealsense2 package

License:        Apache License, Version 2.0
URL:            https://github.com/IntelRealSense/librealsense/
Source0:        %{name}-%{version}.tar.gz

BuildRequires:  dkms
BuildRequires:  libusbx-devel
BuildRequires:  openssl-devel
BuildRequires:  pkgconfig
BuildRequires:  ros-noetic-catkin
BuildRequires:  systemd-udev
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%description
Library for capturing data from the Intel(R) RealSense(TM) SR300, D400 Depth
cameras and T2xx Tracking devices. This effort was initiated to better support
researchers, creative coders, and app developers in domains such as robotics,
virtual reality, and the internet of things. Several often-requested features of
RealSense(TM); devices are implemented in this project.

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/noetic" \
    -DCMAKE_PREFIX_PATH="/opt/ros/noetic" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi
%make_install -C obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/noetic/setup.sh" ]; then . "/opt/ros/noetic/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/noetic

%changelog
* Thu May 06 2021 Sergey Dorodnicov <sergey.dorodnicov@intel.com> - 2.45.0-1
- Autogenerated by Bloom

* Thu Apr 22 2021 Sergey Dorodnicov <sergey.dorodnicov@intel.com> - 2.44.0-1
- Autogenerated by Bloom

* Thu Feb 18 2021 Sergey Dorodnicov <sergey.dorodnicov@intel.com> - 2.42.0-1
- Autogenerated by Bloom

* Thu Dec 31 2020 Sergey Dorodnicov <sergey.dorodnicov@intel.com> - 2.41.0-1
- Autogenerated by Bloom

* Thu Nov 26 2020 Sergey Dorodnicov <sergey.dorodnicov@intel.com> - 2.40.0-2
- Autogenerated by Bloom

* Thu Nov 26 2020 Sergey Dorodnicov <sergey.dorodnicov@intel.com> - 2.40.0-1
- Autogenerated by Bloom

